{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","length","map","id","UserInfo","user","mail","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"m38IAEaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WChBFC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OAAS,EAChB,qBAAKP,UAAU,cAAf,SACGM,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQU,SAI9B,mBAAG,UAAQ,oBAAX,8BCVSC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBACEX,UAAU,WACVE,KAAI,iBAAYS,EAAKC,MAFvB,SAIGD,EAAKV,SCHGY,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKd,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGc,EAAKC,QAGR,8BACG,eAEAD,EAAKH,MACN,cAAC,EAAD,CACEA,KAAMG,EAAKH,aAMjB,mBAAGX,UAAU,iBAAb,SACGc,EAAKV,OAGR,cAAC,EAAD,CACEE,SAAUQ,EAAKR,eCxBRU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKjB,UAAU,WAAf,SACGiB,EAAMT,KAAI,SAAAM,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKL,U,qBCWX,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAM,GAAI,kCACxCA,GADwC,IAE3CH,MAZmBQ,EAYDL,EAAKK,OAXhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAAW,MAY3Db,UAToBgB,EASGR,EAAKL,GARrBc,EAAmBC,QACxB,SAAAzB,GAAO,OAAIA,EAAQuB,SAAWA,QAFlC,IAAsBA,EAJDH,KAgBRM,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUiB,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.15b9aa0f.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo/CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  comments.length > 0 ? (\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo key={comment.id} comment={comment} />\n      ))}\n    </div>\n  ) : (\n    <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n  )\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.mail}`}\n  >\n    {user.name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        {post.user && (\n        <UserInfo\n          user={post.user}\n        />\n        )}\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <CommentList\n      comments={post.comments}\n    />\n  </div>\n);\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        key={post.id}\n        post={post}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport { PostList } from './components/PostList/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentId(postId) {\n  return commentsFromServer.filter(\n    comment => comment.postId === postId,\n  );\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}